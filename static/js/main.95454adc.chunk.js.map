{"version":3,"sources":["components/App.js","index.js"],"names":["App","useState","dr","dmg","diceDR","values","setValues","style","width","display","flexDirection","htmlFor","type","name","id","value","onChange","event","persist","floatDice","target","fullDice","Math","floor","diceExtra","toString","parseInt","substring","indexOf","finalDR","ceil","console","log","onClick","ReactDOM","render","document","querySelector"],"mappings":"mKA6FeA,EA3FH,WAAO,IAAD,EACcC,mBAAS,CAAEC,GAAI,EAAGC,IAAK,EAAGC,OAAQ,SADhD,mBACPC,EADO,KACCC,EADD,KA6Cd,OACI,6BACI,0BACIC,MAAO,CACHC,MAAO,QACPC,QAAS,OACTC,cAAe,WAGnB,6BACI,2BAAOC,QAAQ,MAAf,QACA,2BACIC,KAAK,SACLC,KAAK,KACLC,GAAG,KACHC,MAAOV,EAAOH,GACdc,SAlDC,SAACC,GAClBA,EAAMC,UACN,IAAIC,EAAYF,EAAMG,OAAOL,MAAQ,IACjCM,EAAWC,KAAKC,MAAMJ,GACtBK,EACIL,EAAY,EAAI,IACV,EACAA,EAAY,EAAI,GAChB,EACAA,EAAY,EAAI,IAChB,EACA,EACdb,GAAU,SAACD,GAAD,mBAAC,eACJA,GADG,IAEND,OAAO,GAAD,OAAKiB,EAAL,aAAkBG,GACxBtB,GAAIe,EAAMG,OAAOL,eAsCb,6BACI,2BAAOJ,QAAQ,UAAf,YACA,2BACIC,KAAK,OACLC,KAAK,SACLC,GAAG,SACHC,MAAOV,EAAOD,OACdY,SAzCH,SAACC,GACdA,EAAMC,UACN,IAAMH,EAAQE,EAAMG,OAAOL,MAAMU,WAC7BJ,EAAWK,SAASX,EAAMY,UAAU,EAAGZ,EAAMa,QAAQ,OACrDJ,EAAYE,SAASX,EAAMY,UAAUZ,EAAMa,QAAQ,KAAO,IAC1DC,EAAUP,KAAKQ,KAAgB,IAAXT,GAAkBG,EAE1CO,QAAQC,IAAIX,GACZf,GAAU,SAACD,GAAD,mBAAC,eACJA,GADG,IAEND,OAAQW,EACRb,GAAI2B,WAiCA,6BACI,2BAAOlB,QAAQ,OAAf,SACA,2BACIC,KAAK,SACLC,KAAK,MACLC,GAAG,MACHC,MAAOV,EAAOF,IACda,SA9EH,SAACC,GACdA,EAAMC,UACNZ,GAAU,SAACD,GAAD,mBAAC,eACJA,GADG,kBAELY,EAAMG,OAAOP,KAAOI,EAAMG,OAAOL,eA8E9B,2BAAOH,KAAK,SAASqB,QAAQ,GAAGlB,MAAM,iBClFtDmB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.95454adc.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst App = () => {\r\n    const [values, setValues] = useState({ dr: 0, dmg: 0, diceDR: \"0d+0\" });\r\n\r\n    const onChange = (event) => {\r\n        event.persist();\r\n        setValues((values) => ({\r\n            ...values,\r\n            [event.target.name]: event.target.value,\r\n        }));\r\n    };\r\n\r\n    const updateDiceDR = (event) => {\r\n        event.persist();\r\n        let floatDice = event.target.value / 3.5,\r\n            fullDice = Math.floor(floatDice),\r\n            diceExtra =\r\n                floatDice % 1 > 0.75\r\n                    ? 3\r\n                    : floatDice % 1 > 0.5\r\n                    ? 2\r\n                    : floatDice % 1 > 0.25\r\n                    ? 1\r\n                    : 0;\r\n        setValues((values) => ({\r\n            ...values,\r\n            diceDR: `${fullDice}d+${diceExtra}`,\r\n            dr: event.target.value,\r\n        }));\r\n    };\r\n\r\n    const updateDR = (event) => {\r\n        event.persist();\r\n        const value = event.target.value.toString(),\r\n            fullDice = parseInt(value.substring(0, value.indexOf(\"d\"))),\r\n            diceExtra = parseInt(value.substring(value.indexOf(\"d\") + 1)),\r\n            finalDR = Math.ceil(fullDice * 3.5) + diceExtra;\r\n\r\n        console.log(fullDice);\r\n        setValues((values) => ({\r\n            ...values,\r\n            diceDR: value,\r\n            dr: finalDR,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form\r\n                style={{\r\n                    width: \"500px\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                }}\r\n            >\r\n                <div>\r\n                    <label htmlFor=\"dr\">DR: </label>\r\n                    <input\r\n                        type=\"number\"\r\n                        name=\"dr\"\r\n                        id=\"dr\"\r\n                        value={values.dr}\r\n                        onChange={updateDiceDR}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"dicedr\">DiceDR: </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"dicedr\"\r\n                        id=\"dicedr\"\r\n                        value={values.diceDR}\r\n                        onChange={updateDR}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"dmg\">DMG: </label>\r\n                    <input\r\n                        type=\"number\"\r\n                        name=\"dmg\"\r\n                        id=\"dmg\"\r\n                        value={values.dmg}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n\r\n                <input type=\"button\" onClick=\"\" value=\"Calculate\" />\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}